{% if section.settings.logged_in_only and customer %}
{% if section.settings.section_heading != blank %}<h2 class="sr-only">{{ section.settings.section_heading }}</h2>{% endif %}
<div
  {% if section.settings.section_classes != blank %}class="{{ section.settings.section_classes }}"{% endif %}
  {% if section.settings.row_bg_image != blank %}style="background-image: url({{ section.settings.row_bg_image | image_url: width: 1420 }})"{% endif %}
>
  {%- if section.settings.is_slider and section.blocks.size > 1 -%}
    {% comment %} theme-check-disable UnclosedHTMLElement {% endcomment %}
    <glide-slider
      class="glide{% if section.settings.slider_breakpoint_limit != 'none' %} {{ section.settings.slider_breakpoint_limit }}:pb-0{% endif %}{% if section.settings.slider_classes != '' %} {{ section.settings.slider_classes }}{% endif %}"
      id="slider-{{ section.id }}"
      data-breakpoint-limit="{{ section.settings.slider_breakpoint_limit }}"
    >
      <div class="glide__track {{ section.settings.container_classes }}" data-glide-el="track">
  {%- endif -%}
        <ul
          class="{% if section.settings.is_slider %}glide__slides{% else %}{% unless section.settings.container_classes contains 'grid' %}flex {% endunless %}md:flex-shrink-0 {{ section.settings.container_classes }}{% endif %}"
          role="presentation"
        >
          {%- for block in section.blocks -%}
            {%- assign bg_image_src = block.settings.image | image_url: width: 1420 -%}
            <li
              class="{% if block.settings.column_classes != blank %}{{ block.settings.column_classes }}{% endif %}{% if section.settings.is_slider %} glide__slide{% endif %}{% if block.settings.is_bg_image %} bg-cover{% endif %}"
              {% if block.settings.is_bg_image %}style="background-image: url({% render 'imgix', src: bg_image_src %})"{% endif %}
              {{ block.shopify_attributes }}
            >
              {%- case block.type -%}
                {%- when 'column' %}
                  {%- if block.settings.image != blank and block.settings.is_bg_image == false -%}
                    {%- if block.settings.image_link != blank -%}
                      <a href="{{ block.settings.image_link }}"{% if block.settings.image_link_classes != blank %} class="{{ block.settings.image_link_classes }}"{% endif %}>
                    {%- endif -%}
                      {% comment %} theme-check-disable RemoteAsset {% endcomment %}
                      {%- if block.settings.image contains '.gif' -%}
                        {%- liquid
                          assign mobile_image_src = block.settings.image | image_url: width: 400
                          assign mobile_image_src_2x = block.settings.image | image_url: width: 800
                        -%}
                        <img
                          srcset="{{ mobile_image_src }} 1x, {{ mobile_image_src_2x }} 2x"
                          src="{{ mobile_image_src }}"
                          alt="{{ block.settings.image.alt }}"
                          height="{{ block.settings.image.height }}"
                          width="{{ block.settings.image.width }}"
                          class="{{ block.settings.image_classes }}"
                          loading="lazy"
                        >
                      {%- else -%}
                        {%- if block.settings.image_static_size != blank -%}
                          {%- liquid
                            assign static_image_size_array = block.settings.image_static_size | split: ', '
                            assign static_image_width = static_image_size_array | first
                            assign static_image_height = static_image_size_array | last
                            assign static_image_width_mobile = static_image_size_array | first | divided_by: 2
                            assign static_image_src = block.settings.image | image_url: width: static_image_width_mobile
                            assign static_image_src_2x = block.settings.image | image_url: width: static_image_width
                          -%}
                          <img
                            srcset="{% render 'imgix', src: static_image_src %} 1x, {% render 'imgix', src: static_image_src_2x %} 2x"
                            src="{% render 'imgix', src: static_image_src %}"
                            alt="{{ block.settings.image.alt }}"
                            height="{{ static_image_height }}"
                            width="{{ static_image_width }}"
                            class="{{ block.settings.image_classes }}"
                            loading="lazy"
                          >
                        {%- else -%}
                          {%- liquid
                            assign mobile_image_src = block.settings.image | image_url: width: 400
                            assign mobile_image_src_2x = block.settings.image | image_url: width: 800
                            assign mobile_image_src_4x = block.settings.image | image_url: width: 1600
                            assign desktop_image_src = block.settings.image_desktop | image_url: width: 800
                            assign desktop_image_src_2x = block.settings.image_desktop | image_url: width: 1600
                          -%}
                          <picture class="{{ block.settings.image_wrapper_classes }}">
                            {%- if block.settings.image_desktop != blank -%}
                              <source
                                srcset="{% render 'imgix', src: desktop_image_src %} 1x, {% render 'imgix', src: desktop_image_src_2x %} 2x"
                                media="(min-width: 640px)"
                              >
                            {%- else -%}
                              <source
                                srcset="{% render 'imgix', src: mobile_image_src_2x %} 1x, {% render 'imgix', src: mobile_image_src_4x %} 2x"
                                media="(min-width: 640px)"
                              >
                            {%- endif -%}
                            <source
                              srcset="{% render 'imgix', src: mobile_image_src %} 1x, {% render 'imgix', src: mobile_image_src_2x %} 2x"
                              media="(min-width: 0px)"
                            >
                            <img
                              srcset="{% render 'imgix', src: mobile_image_src %} 1x, {% render 'imgix', src: mobile_image_src_2x %} 2x"
                              src="{% render 'imgix', src: mobile_image_src %}"
                              alt="{{ block.settings.image.alt }}"
                              height="{{ block.settings.image.height }}"
                              width="{{ block.settings.image.width }}"
                              class="{{ block.settings.image_classes }}"
                              loading="lazy"
                            >
                          </picture>
                        {%- endif -%}
                      {%- endif -%}
                      {% comment %} theme-check-enable RemoteAsset {% endcomment %}
                    {%- if block.settings.image_link != blank -%}
                      </a>
                    {%- endif -%}
                  {%- endif -%}
                  {%- if block.settings.heading != "" or block.settings.paragraph != "" or block.settings.button_label != "" -%}
                    {%- unless block.settings.remove_text_wrapper -%}
                      <div {% if block.settings.text_classes != blank %}class="{{ block.settings.text_classes }}"{% endif %}>
                    {%- endunless -%}
                      {%- if block.settings.heading != "" -%}
                        <div class="{{ block.settings.heading_classes }}">{{- block.settings.heading -}}</div>
                      {%- endif -%}
                      {%- if block.settings.paragraph != blank -%}
                        <div class="{{ block.settings.paragraph_classes }}">
                          {%- if block.settings.paragraph != blank -%}
                            {{- block.settings.paragraph -}}
                          {%- endif -%}
                        </div>
                      {%- endif -%}
                      {%- if block.settings.button_label != "" or block.settings.is_atc_button -%}
                        {%- if block.settings.is_atc_button and block.settings.atc_button_product != blank -%}
                          <script src="{{ 'product-form.js' | asset_url }}" defer="defer"></script>
                          <div{% if block.settings.product_form_classes != blank %} class="{{ block.settings.product_form_classes }}"{% endif %}>
                            {%- liquid
                              assign product_form_id = 'product-form-' | append: block.settings.atc_button_product.id | append: '-' | append: block.id
                              assign subscription_group = nil
                              for group in block.settings.atc_button_product.selling_plan_groups
                                if group.name == 'Subscribe and Save'
                                  assign subscription_group = group
                                endif
                              endfor
                            -%}
                            {%- if block.settings.is_subscription and block.settings.atc_button_product.selected_or_first_available_variant.selling_plan_allocations.size > 0 and subscription_group -%}
                              {%- liquid
                                assign default_option = subscription_group.selling_plans[1].id
                                if block.settings.atc_button_product.metafields.custom.subscription_interval != blank
                                  for plan in subscription_group.selling_plans
                                    if plan.name contains block.settings.atc_button_product.metafields.custom.subscription_interval
                                      assign default_option = plan.id
                                    endif
                                  endfor
                                endif
                              -%}
                              {%- if block.settings.variant_picker_type == 'button' -%}
                                <fieldset class="js flex">
                                  <legend class="sr-only">Ship every:</legend>
                                  {%- for option in subscription_group.selling_plans -%}
                                    <div class="flex-grow{% unless forloop.last %} mr-0.5{% endunless %}">
                                      <input type="radio"
                                        id="SubscriptionOption-{{ block.settings.atc_button_product.id }}-{{ forloop.index0 }}-{{ block.id }}"
                                        class="peer hidden"
                                        name="selling_plan"
                                        value="{{ option.id }}"
                                        form="{{ product_form_id }}"
                                        {%- if option.id == default_option -%}checked{%- endif -%}
                                      >
                                      <label
                                        class="button button-xs lowercase button-secondary peer-checked:border-seaweed-4 peer-checked:bg-wave-200 px-1 tracking-normal w-full text-left"
                                        for="{{ block.settings.atc_button_product.id }}-{{ forloop.index0 }}-{{ block.id }}"
                                        tabindex="0"
                                      >
                                        {{- option.name -}}
                                      </label>
                                    </div>
                                  {%- endfor -%}
                                </fieldset>
                              {%- else -%}
                                <div class="relative block mt-0.5 tracking-wide">
                                  <label class="absolute top-px left-3 z-10 text-xs font-medium block leading-5" for="Option-{{ block.settings.atc_button_product.id }}-{{ forloop.index0 }}-{{ block.id }}">
                                    Ship every:
                                  </label>
                                  <select id="SubscriptionOption-{{ block.settings.atc_button_product.id }}-{{ forloop.index0 }}-{{ block.id }}"
                                    class="block input input-xs w-full pl-24"
                                    name="selling_plan"
                                    form="{{ product_form_id }}"
                                  >
                                    {%- for option in subscription_group.selling_plans -%}
                                      <option
                                        value="{{ option.id }}"
                                        {%- if option.id == default_option -%}selected{%- endif -%}
                                      >
                                        {{- option.name -}}
                                      </option>
                                    {%- endfor -%}
                                  </select>
                                </div>
                              {%- endif -%}
                            {%- elsif block.settings.show_variants and block.settings.atc_button_product.has_only_default_variant == false -%}
                              {%- if block.settings.variant_picker_type == 'dropdown' or block.settings.atc_button_product.handle == 'gift-card' -%}
                                <variant-selects
                                  class="no-js-hidden block mt-2"
                                  data-section="{{ block.settings.atc_button_product.id }}-{{ block.id }}"
                                  data-url="{{ block.settings.atc_button_product.url }}"
                                  data-updateUrl="false"
                                >
                                  {%- for option in block.settings.atc_button_product.options_with_values -%}
                                    <div class="relative block{% if block.settings.variant_classes != blank %} {{ block.settings.variant_classes }}{% endif %}">
                                      <label class="absolute top-px left-3 z-10 text-xs font-medium block leading-5" for="Option-{{ block.settings.atc_button_product.id }}-{{ forloop.index0 }}-{{ block.id }}">
                                        {{- option.name -}}
                                      </label>
                                      <select id="Option-{{ block.settings.atc_button_product.id }}-{{ forloop.index0 }}-{{ block.id }}"
                                        class="block input input-xs w-full pl-16"
                                        name="options[{{ option.name | escape }}]"
                                        form="{{ product_form_id }}"
                                      >
                                        {%- for value in option.values -%}
                                          <option value="{{ value | escape }}" {% if option.selected_value == value %}selected="selected"{% endif %}>
                                            {{ value }}
                                          </option>
                                        {%- endfor -%}
                                      </select>
                                    </div>
                                  {%- endfor -%}

                                  <script type="application/json" class="variant-data">
                                    {{ block.settings.atc_button_product.variants | json }}
                                  </script>
                                </variant-selects>
                              {%- else -%}
                                <variant-radios
                                  class="no-js-hidden block mt-1"
                                  data-section="{{ block.settings.atc_button_product.id }}-{{ block.id }}"
                                  data-url="{{ block.settings.atc_button_product.url }}"
                                  data-update-url="false"
                                >
                                  {%- for option in block.settings.atc_button_product.options_with_values -%}
                                    <fieldset class="js flex{% if block.settings.variant_classes != blank %} {{ block.settings.variant_classes }}{% endif %}">
                                      <legend class="sr-only">{{ option.name }}</legend>
                                      {%- for value in option.values -%}
                                        <div>
                                          <input type="radio"
                                            id="{{ block.settings.atc_button_product.id }}-{{ option.position }}-{{ forloop.index0 }}-{{ block.id }}"
                                            class="peer hidden"
                                            name="{{ option.name }}"
                                            value="{{ value | escape }}"
                                            form="{{ product_form_id }}"
                                            {% if option.selected_value == value %}checked{% endif %}
                                          >
                                          <label
                                            class="button button-xs rounded-full lowercase button-secondary peer-checked:border-seaweed-400 peer-checked:bg-wave-200 mr-1 xs:mr-2{% if option.values.size > 2 %} px-2 2xs:px-2.5 xs:px-3{% else%} px-2.5 xs:px-3{% endif %}{% if block.settings.variant_button_classes != blank %} {{ block.settings.variant_button_classes }}{% endif %}"
                                            for="{{ block.settings.atc_button_product.id }}-{{ option.position }}-{{ forloop.index0 }}-{{ block.id }}"
                                            tabindex="0"
                                          >
                                            {%- if block.settings.variant_button_nofl == true -%}
                                              {{ value | replace: 'fl ', '<span class="hidden sm:inline">fl </span>' }}
                                            {%- else -%}
                                              {{ value }}
                                            {%- endif -%}
                                          </label> 
                                        </div>
                                      {%- endfor -%}
                                    </fieldset>
                                  {%- endfor -%}

                                  <script type="application/json" class="variant-data">
                                    {{ block.settings.atc_button_product.variants | json }}
                                  </script>
                                </variant-radios>
                              {%- endif -%}
                            {%- endif -%}

                            <product-form data-cart-type="{{ settings.cart_type }}">
                              <div class="product-form__error-message-wrapper hidden items-center mb-1" role="alert">
                                {% render 'icon-error-circle', classes: 'w-4 h-4 mr-1 text-coral-800', aria_hidden: true, stroke_width: 2 %}
                                <span class="product-form__error-message text-coral-800 tracking-wide text-sm font-book"></span>
                              </div>

                              {%- form 'product', block.settings.atc_button_product, id: product_form_id, class: 'form', novalidate: 'novalidate', data-type: 'add-to-cart-form' -%}
                                <input type="hidden" name="id" value="{{ block.settings.atc_button_product.selected_or_first_available_variant.id }}" disabled>
                                <input type="hidden" name="properties[_is_subscription]" value="false">
                                <button
                                  id="{{ product_form_id }}-submit"
                                  type="submit"
                                  name="add"
                                  aria-haspopup="dialog"
                                  aria-labelledby="{{ product_form_id }}-submit title-{{ block.id }}-{{ block.settings.atc_button_product.id }}"
                                  aria-live="polite"
                                  class="button w-full transition flex mt-2 disabled:opacity-50 {% if block.settings.atc_button_product.selected_or_first_available_variant.available %}justify-between{% else %}justify-center{% endif %} {{ block.settings.button_classes }}"
                                  {% if block.settings.atc_button_product.selected_or_first_available_variant.available == false %}disabled{% endif %}
                                >
                                  {%- if block.settings.atc_button_product.selected_or_first_available_variant.available -%}
                                    {%- if block.settings.is_subscription -%}
                                      <span>Subscribe</span>
                                    {%- else -%}
                                      <span>{{ 'products.product.add_to_cart' | t }}</span>
                                    {%- endif -%}
                                    <span id="price-{{ block.settings.atc_button_product.id }}-{{ block.id }}" class="whitespace-nowrap tracking-wide">
                                      {% render 'price',
                                        product: block.settings.atc_button_product,
                                        show_price_range: block.settings.show_variants and block.settings.atc_button_product.has_only_default_variant == false,
                                        use_variant: true,
                                        subscription: block.settings.is_subscription
                                      %}
                                    </span>
                                  {%- else -%}
                                    {{ 'products.product.sold_out' | t }}
                                  {%- endif -%}
                                </button>
                              {%- endform -%}
                            </product-form>
                          </div>
                        {%- else -%}
                          <a
                            class="button {{ block.settings.button_classes }}"
                            {% if block.settings.link == blank %}role="link" aria-disabled="true"
                            {% else %}href="{{ block.settings.link }}"{% endif %}
                            {% if block.settings.target_blank %}target="_blank"{% endif %}
                            {% if block.settings.button_aria_label != blank %}aria-label="{{ block.settings.button_aria_label }}"{% endif %}
                          >
                            {{- block.settings.button_label | escape -}}
                            {%- if block.settings.button_icon -%}
                              {{- block.settings.button_icon -}}
                            {%- endif -%}
                          </a>
                        {%- endif -%}
                      {%- endif -%}
                    {%- unless block.settings.remove_text_wrapper -%}
                      </div>
                    {%- endunless -%}
                  {%- endif -%}
                  {%- if block.settings.video_mp4 != blank -%}
                    {%- liquid
                      if block.settings.video_poster_size != blank
                        assign video_poster_width = block.settings.video_poster_size | split: ', ' | first
                      else
                        assign video_poster_width = 480
                      endif
                      assign video_poster_url = block.settings.video_mp4.preview_image | image_url: width: video_poster_width
                    -%}
                    <video
                      {% if block.settings.video_autoplay %}autoplay{% endif %}
                      {% unless block.settings.video_hide_controls %}controls{% endunless %}
                      {% if block.settings.video_loop %}loop{% endif %}
                      {% if block.settings.video_muted %}muted{% endif %}
                      playsinline
                      poster="{% render 'imgix', src: video_poster_url %}"
                      class="lazy bg-wave-200 border-0{% if block.settings.video_classes %} {{ block.settings.video_classes }}{% endif %}"
                    >
                      <source src="tiny.mp4" type="video/mp4" media="(max-width:480px)">
                      {%- for source in block.settings.video_mp4.sources -%}
                        <source data-src="{{ source.url }}" type="video/{{ source.format }}">
                      {%- endfor -%}
                      {% comment %} theme-check-disable RemoteAsset {% endcomment %}
                      <img
                        src="{% render 'imgix', src: video_poster_url %}"
                        alt=""
                        width="{{ block.settings.video_mp4.preview_image.width }}"
                        height="{{ block.settings.video_mp4.preview_image.height }}"
                        loading="lazy"
                      >
                      {% comment %} theme-check-enable RemoteAsset {% endcomment %}
                    </video>
                  {%- endif -%}
                  {%- if block.settings.prod_slider_handles != blank -%}
                    {%- assign product_handles = block.settings.prod_slider_handles | split: ', ' -%}
                    <horizontal-scroll-box class="relative">
                      <div class="scroll-box flex gap-3 snap-x overflow-x-auto pb-3">
                        {%- for handle in product_handles -%}
                          <div class="snap-start w-44 shrink-0{% if forloop.last %} mr-6{% endif %}">
                            {% render 'product-card',
                              card_product: all_products[handle],
                              section_id: block.id,
                              image_class: '!bg-white',
                              button_class: 'flex-col py-1 button-sm leading-none md:px-3 xl:px-4',
                              name_class: '2xs:text-sm',
                              description_class: ''
                            %}
                          </div>
                        {%- endfor -%}
                      </div>
                      <nav>
                        <button class="next nav-hide absolute top-1/2 -right-3 bottom-3 z-10 bg-white w-8 h-8 -mt-7 rounded-full shadow-md shadow-seaweed-700/10 flex items-center justify-center motion-safe:transition-opacity" aria-label="Next">
                          {% render 'icon-arrow', variant: 'short', classes: 'w-6 h-6', stroke_width: 1.5 %}
                        </button>
                        <button class="prev nav-hide absolute top-1/2 -left-7 bottom-3 z-10 bg-white w-8 h-8 -mt-7 rounded-full shadow-md shadow-seaweed-700/10 flex items-center justify-center motion-safe:transition-opacity" aria-label="Previous">
                          {% render 'icon-arrow', variant: 'short', classes: 'w-6 h-6 rotate-180', stroke_width: 1.5 %}
                        </button>
                      </nav>
                    </horizontal-scroll-box>
                  {%- endif -%}
                {%- when 'product' %}
                  {% comment %} theme-check-disable LiquidTag {% endcomment %}
                  {%- if block.settings.product -%}
                    {% render 'product-card',
                      card_product: block.settings.product,
                      section_id: block.id,
                      custom_default_image: block.settings.custom_product_image,
                      image_class: block.settings.image_classes,
                      image_element_class: block.settings.image_element_classes,
                      button_class: block.settings.button_classes,
                      product_form_class: block.settings.product_form_classes,
                      name_class: block.settings.name_classes,
                      description_class: block.settings.description_classes,
                      hide_badge: block.settings.hide_badge,
                      show_reviews: block.settings.show_reviews,
                      show_benefits: block.settings.show_benefits,
                      subscription: block.settings.subscription,
                      percent_discount: block.settings.percent_discount,
                      is_pdp_link: section.settings.is_pdp_link,
                      pdp_link_label: section.settings.pdp_link_label,
                      default_to_mini: block.settings.default_to_mini,
                      default_to_jumbo: block.settings.default_to_jumbo,
                      variant_picker_type: block.settings.variant_picker_type,
                      title_text: block.settings.title_text,
                      short_description_text: block.settings.short_description_text,
                      custom_badge_html: block.settings.custom_badge_html,
                      custom_badge_classes: block.settings.custom_badge_classes
                    %}
                  {%- endif -%}
                  {% comment %} theme-check-enable LiquidTag {% endcomment %}
                {%- when 'article' -%}
                  {% render 'article-card'
                    article: block.settings.article,
                    card_classes: block.settings.card_classes,
                    show_image: block.settings.show_image,
                    image_classes: block.settings.image_classes,
                    date_classes: block.settings.date_classes,
                    author_classes: block.settings.author_classes,
                    title_classes: block.settings.title_classes,
                    excerpt_classes: block.settings.excerpt_classes,
                    link_classes: block.settings.link_classes,
                    tag_classes: block.settings.tag_classes
                  %}
                {%- when 'code' -%}
                  {%- if block.settings.code != "" -%}
                    {{- block.settings.code -}}
                  {%- endif -%}
                {%- when 'countdown' -%}
                  {%- if block.settings.countdown_date != blank and block.settings.countdown_time != blank -%}
                    {%- assign increment_array = 'days, hours, minutes, seconds' | split: ', ' -%}
                    <countdown-component
                      data-date="{{ block.settings.countdown_date }}"
                      data-time="{{ block.settings.countdown_time }}"
                    >
                      <dl class="flex justify-center {{ block.settings.text_classes }}">
                        {%- for increment in increment_array -%}
                          {%- liquid
                            if block.settings.short_labels
                              assign increment_label = increment | split: '' | first
                            else
                              assign increment_label = increment
                            endif
                          -%}
                          <div class="flex flex-1 flex-col-reverse text-center">
                            <dt class="{{ block.settings.label_classes }}">{{ increment_label }}</dt>
                            <dd class="countdown-{{ increment }} {{ block.settings.count_classes }}">00</dd>
                          </div>
                        {%- endfor -%}
                      </dl>
                    </countdown-component>
                  {%- endif -%}
                {%- when 'upsell' -%}
                  {%- if block.settings.product -%}
                      {%- render 'product-upsell', product: block.settings.product -%}
                  {%- endif -%}
              {%- endcase -%}
            </li>
          {%- endfor -%}
        </ul>
  {%- if section.settings.is_slider -%}
      </div>
      
      {%- if section.settings.show_arrow_nav -%}
        <div class="glide__arrows" data-glide-el="controls">
          <button
            class="glide__arrow glide__arrow--left {{ section.settings.arrow_nav_classes }}{% if section.settings.slider_breakpoint_limit != 'none' %} {{ section.settings.slider_breakpoint_limit }}:hidden{% endif %}"
            aria-label="Go to previous"
            data-glide-dir="<"
          >
            {% render 'icon-chevron', aria_hidden: true, stroke_width: 2, classes: 'h-10 w-10 text-seaweed-700 bg-white rounded-full block border-y-4 border-r-2 border-l-6 border-white' %}
          </button>
          <button
            class="glide__arrow glide__arrow--right {{ section.settings.arrow_nav_classes }}{% if section.settings.slider_breakpoint_limit != 'none' %} {{ section.settings.slider_breakpoint_limit }}:hidden{% endif %}"
            aria-label="Go to next"
            data-glide-dir=">"
          >
            {% render 'icon-chevron', aria_hidden: true, stroke_width: 2, classes: 'h-10 w-10 text-seaweed-700 bg-white rounded-full block border-y-4 border-r-2 border-l-6 border-white rotate-180' %}
          </button>
        </div>
      {%- endif -%}

      {%- if section.settings.show_dot_nav -%}
        <ol
          class="glide__bullets flex {{ section.settings.dot_nav_classes }}{% if section.settings.slider_breakpoint_limit != 'none' %} {{ section.settings.slider_breakpoint_limit }}:hidden{% endif %}"
          data-glide-el="controls[nav]"
        >
          {%- for dot in (1..section.settings.slider_indicator_count) -%}
            <li
              class="glide__bullet p-2{% if forloop.first %} active{% endif %}"
              data-glide-dir="={{ forloop.index0 }}"
            >
              <span class="sr-only">Go to slide {{ forloop.index }}</span>
              <span class="block w-2 h-2 bg-seaweed-700 rounded-full"></span>
            </li>
          {%- endfor -%}
        </ol>
      {%- endif -%}
    </glide-slider>
    {% comment %} theme-check-enable UnclosedHTMLElement {% endcomment %}
  {%- endif -%}
</div>
{% endif %}

{% schema %}
{
  "name": "t:sections.multicolumn.name",
  "tag": "section",
  "settings": [
    {
      "type": "text",
      "id": "section_heading",
      "label": "Section heading"
    },
    {
      "type": "textarea",
      "id": "section_classes",
      "label": "Section classes"
    },
    {
      "type": "textarea",
      "id": "container_classes",
      "label": "Container classes"
    },
    {
      "type": "image_picker",
      "id": "row_bg_image",
      "label": "Background image (optional)"
    },
    {
      "type": "checkbox",
      "id": "logged_in_only",
      "label": "Logged-in only"
    },
    {
      "type": "header",
      "content": "Slider settings"
    },
    {
      "type": "checkbox",
      "id": "is_slider",
      "default": false,
      "label": "Slider"
    },
    {
      "type": "number",
      "default": 3,
      "id": "slider_indicator_count",
      "label": "Number of dot indicators to display"
    },
    {
      "type": "select",
      "default": "none",
      "id": "slider_breakpoint_limit",
      "info": "When window is above a certain size and all the slides can fit on one screen, disable the slider.",
      "label": "Disable slider at breakpoint",
      "options": [
        {
          "value": "none",
          "label": "None"
        },
        {
          "value": "sm",
          "label": "Small (640px)"
        },
        {
          "value": "md",
          "label": "Medium (768px)"
        },
        {
          "value": "lg",
          "label": "Large (1024px)"
        },
        {
          "value": "xl",
          "label": "X-Large (1280px)"
        }
      ]
    },
    {
      "type": "textarea",
      "id": "slider_classes",
      "label": "Slider classes"
    },
    {
      "type": "checkbox",
      "id": "show_arrow_nav",
      "default": true,
      "label": "Show arrow nav"
    },
    {
      "type": "textarea",
      "default": "top-1/2 -translate-y-1/2",
      "id": "arrow_nav_classes",
      "label": "Arrow nav classes"
    },
    {
      "type": "checkbox",
      "id": "show_dot_nav",
      "default": false,
      "label": "Show dot nav"
    },
    {
      "type": "textarea",
      "default": "absolute bottom-1 left-1/2 -translate-x-1/2",
      "id": "dot_nav_classes",
      "label": "Dot nav classes"
    }
  ],
  "blocks": [
    {
      "type": "column",
      "name": "Column",
      "settings": [
        {
          "type": "header",
          "content": "General settings"
        },
        {
          "type": "textarea",
          "id": "column_classes",
          "label": "Column classes"
        },
        {
          "type": "header",
          "content": "Image settings"
        },
        {
          "type": "image_picker",
          "id": "image",
          "label": "t:sections.multicolumn.blocks.column.settings.image.label"
        },
        {
          "type": "image_picker",
          "id": "image_desktop",
          "info": "Provide a different image for desktop view",
          "label": "Image (desktop)"
        },
        {
          "type": "checkbox",
          "id": "is_bg_image",
          "label": "Background image"
        },
        {
          "type": "url",
          "id": "image_link",
          "label": "Image link (optional)"
        },
        {
          "type": "textarea",
          "id": "image_classes",
          "label": "Image classes"
        },
        {
          "type": "textarea",
          "id": "image_wrapper_classes",
          "label": "Image wrapper classes"
        },
        {
          "type": "textarea",
          "id": "image_link_classes",
          "label": "Image link classes"
        },
        {
          "type": "text",
          "id": "image_static_size",
          "label": "Static image size",
          "info": "[a11y] Do not use when desktop and mobile images differ. Format: width, height"
        },
        {
          "type": "header",
          "content": "Text settings"
        },
        {
          "type": "textarea",
          "id": "text_classes",
          "label": "Text block classes"
        },
        {
          "type": "checkbox",
          "id": "remove_text_wrapper",
          "label": "Remove text wrapper"
        },
        {
          "type": "html",
          "id": "heading",
          "info": "This field takes HTML.",
          "label": "Heading"
        },
        {
          "type": "textarea",
          "id": "heading_classes",
          "label": "Heading classes"
        },
        {
          "type": "html",
          "id": "paragraph",
          "info": "This field takes HTML.",
          "label": "Paragraph"
        },
        {
          "type": "textarea",
          "id": "paragraph_classes",
          "label": "Paragraph classes"
        },
        {
          "type": "header",
          "content": "Button settings"
        },
        {
          "type": "text",
          "id": "button_label",
          "label": "Button label"
        },
        {
          "type": "text",
          "id": "button_aria_label",
          "label": "ARIA label"
        },
        {
          "type": "url",
          "id": "link",
          "label": "Button link"
        },
        {
          "type": "checkbox",
          "id": "target_blank",
          "label": "Open in new tab"
        },
        {
          "type": "textarea",
          "id": "button_classes",
          "label": "Button classes"
        },
        {
          "type": "html",
          "id": "button_icon",
          "info": "Format: SVG",
          "label": "Button icon"
        },
        {
          "type": "textarea",
          "id": "product_form_classes",
          "label": "Product form classes",
          "info": "Only for add to cart buttons"
        },
        {
          "type": "checkbox",
          "id": "is_atc_button",
          "label": "Add to cart button"
        },
        {
          "type": "checkbox",
          "id": "is_subscription",
          "label": "Subscription"
        },
        {
          "type": "product",
          "id": "atc_button_product",
          "label": "Product to add"
        },
        {
          "type": "checkbox",
          "id": "show_variants",
          "label": "Show variant selector"
        },
        {
          "type": "select",
          "id": "variant_picker_type",
          "label": "Variant picker",
          "default": "button",
          "options": [
            {
              "value": "button",
              "label": "Buttons"
            },
            {
              "value": "dropdown",
              "label": "Dropdown"
            }
          ]
        },
        {
          "type": "textarea",
          "id": "variant_classes",
          "label": "Variant classes"
        },
        {
          "type": "textarea",
          "id": "variant_button_classes",
          "label": "Variant button classes"
        },
        {
          "type": "checkbox",
          "id": "variant_button_nofl",
          "label": "Hide 'fl' in variant button (mobile)"
        },
        {
          "type": "header",
          "content": "Video settings"
        },
        {
          "type": "video",
          "id": "video_mp4",
          "info": "Format: mp4 preferred",
          "label": "Video file"
        },
        {
          "type": "checkbox",
          "id": "video_autoplay",
          "label": "Autoplay video"
        },
        {
          "type": "checkbox",
          "id": "video_loop",
          "label": "Loop video"
        },
        {
          "type": "checkbox",
          "id": "video_hide_controls",
          "label": "Hide controls"
        },
        {
          "type": "checkbox",
          "id": "video_muted",
          "label": "Mute video"
        },
        {
          "type": "textarea",
          "id": "video_classes",
          "label": "Video classes"
        },
        {
          "type": "text",
          "id": "video_poster_size",
          "label": "Custom video poster size",
          "info": "[a11y] Use a custom size for video poster image. Format: width, height"
        },
        {
          "type": "header",
          "content": "Product slider settings"
        },
        {
          "type": "textarea",
          "id": "prod_slider_handles",
          "label": "Product slider handles",
          "info": "A comma separated list of handles"
        },
        {
          "type": "textarea",
          "id": "prod_slider_classes",
          "label": "Product slider classes"
        }
      ]
    },
    {
      "type": "product",
      "name": "Product Tile",
      "settings": [
        {
          "type": "textarea",
          "id": "column_classes",
          "label": "Column classes"
        },
        {
          "type": "product",
          "id": "product",
          "label": "Product"
        },
        {
          "type": "image_picker",
          "id": "custom_product_image",
          "label": "Custom image"
        },
        {
          "type": "textarea",
          "id": "image_classes",
          "label": "Image wrapper classes"
        },
        {
          "type": "textarea",
          "id": "image_element_classes",
          "label": "Image element classes"
        },
        {
          "type": "html",
          "id": "custom_badge_html",
          "label": "Custom badge html"
        },
        {
          "type": "textarea",
          "id": "custom_badge_classes",
          "label": "Custom badge classes"
        },
        {
          "type": "textarea",
          "id": "button_classes",
          "label": "Button classes"
        },
        {
          "type": "text",
          "id": "title_text",
          "label": "Custom title text"
        },
        {
          "type": "textarea",
          "id": "name_classes",
          "label": "Product name classes"
        },
        {
          "type": "text",
          "id": "short_description_text",
          "label": "Custom short description text"
        },
        {
          "type": "textarea",
          "id": "description_classes",
          "label": "Short description classes"
        },
        {
          "type": "select",
          "id": "variant_picker_type",
          "label": "Variant picker type",
          "options": [
            {
              "value": "dropdown",
              "label": "Dropdown"
            },
            {
              "value": "button",
              "label": "Button"
            },
            {
              "value": "none",
              "label": "None"
            }
          ],
          "default": "button"
        },
        {
          "type": "checkbox",
          "id": "hide_badge",
          "label": "Hide badge"
        },
        {
          "type": "checkbox",
          "id": "show_reviews",
          "label": "Show reviews"
        },
        {
          "type": "checkbox",
          "id": "show_benefits",
          "label": "Show benefits"
        },
        {
          "type": "checkbox",
          "id": "default_to_mini",
          "label": "Default to mini"
        },
        {
          "type": "checkbox",
          "id": "default_to_jumbo",
          "label": "Default to jumbo"
        },
        {
          "type": "checkbox",
          "id": "subscription",
          "label": "Subscription tile"
        },
        {
          "type": "checkbox",
          "id": "percent_discount",
          "label": "Percent discount",
          "info": "For sets, use % off instead of $ off in savings badge."
        },
        {
          "type": "checkbox",
          "id": "is_pdp_link",
          "label": "Link to PDP",
          "info": "Replace ATC button with static button that leads to PDP. For use with products that require input on PDP.",
          "default": false
        },
        {
          "type": "text",
          "id": "pdp_link_label",
          "label": "PDP link label",
          "info": "For use with PDP link option.",
          "default": "View product"
        }
      ]
    },
    {
      "type": "article",
      "name": "Article Tile",
      "settings": [
        {
          "type": "textarea",
          "id": "column_classes",
          "label": "Column classes"
        },
        {
          "type": "article",
          "id": "article",
          "label": "Article"
        },
        {
          "type": "textarea",
          "id": "card_classes",
          "label": "Card classes",
          "default": "tracking-wide"
        },
        {
          "type": "checkbox",
          "id": "show_image",
          "label": "Show image",
          "default": true
        },
        {
          "type": "image_picker",
          "id": "custom_article_image",
          "label": "Custom image"
        },
        {
          "type": "textarea",
          "id": "image_classes",
          "label": "Image classes"
        },
        {
          "type": "textarea",
          "id": "date_classes",
          "label": "Date classes",
          "default": "sr-only"
        },
        {
          "type": "textarea",
          "id": "author_classes",
          "label": "Author classes",
          "default": "sr-only"
        },
        {
          "type": "textarea",
          "id": "tag_classes",
          "label": "Tag classes",
          "default": "uppercase text-xs font-bold tracking-widest mb-1"
        },
        {
          "type": "textarea",
          "id": "title_classes",
          "label": "Title classes",
          "default": "font-medium leading-tight mb-1"
        },
        {
          "type": "textarea",
          "id": "excerpt_classes",
          "label": "Excerpt classes",
          "default": "sr-only text-sm leading-snug"
        },
        {
          "type": "textarea",
          "id": "link_classes",
          "label": "Link classes",
          "default": "button button-tertiary button-xs"
        }
      ]
    },
    {
      "type": "code",
      "name": "Code block",
      "settings": [
        {
          "type": "textarea",
          "id": "column_classes",
          "label": "Column classes"
        },
        {
          "type": "html",
          "id": "code",
          "info": "This field takes HTML.",
          "label": "Code block"
        }
      ]
    },
    {
      "type": "countdown",
      "name": "Countdown",
      "settings": [
        {
          "type": "header",
          "content": "General settings"
        },
        {
          "type": "textarea",
          "id": "column_classes",
          "label": "Column classes"
        },
        {
          "type": "textarea",
          "id": "text_classes",
          "label": "Text block classes"
        },
        {
          "type": "header",
          "content": "Date styles"
        },
        {
          "type": "text",
          "id": "countdown_date",
          "label": "Date",
          "info": "Format: MM/DD/YYYY"
        },
        {
          "type": "text",
          "id": "countdown_time",
          "label": "Time",
          "info": "Format: HH:MM (24hr, PST)"
        },
        {
          "type": "header",
          "content": "Text styles"
        },
        {
          "type": "textarea",
          "id": "count_classes",
          "info": "This field takes HTML.",
          "label": "Count classes"
        },
        {
          "type": "textarea",
          "id": "label_classes",
          "info": "This field takes HTML.",
          "label": "Label classes"
        },
        {
          "type": "checkbox",
          "id": "short_labels",
          "label": "Use short labels (d:h:m:s)"
        }
      ]
    },
    {
      "type": "upsell",
      "name": "Product Upsell",
      "settings": [
        {
          "type": "textarea",
          "id": "column_classes",
          "label": "Column classes"
        },
        {
          "type": "product",
          "id": "product",
          "label": "Product"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "t:sections.multicolumn.presets.name",
      "blocks": [
        {
          "type": "column"
        }
      ]
    }
  ]
}
{% endschema %}
